// <auto-generated />
using System;
using HermanosK.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HermanosK.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241125102040_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HermanosK.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Name = "Cliente"
                        },
                        new
                        {
                            RoleId = 2,
                            Name = "Administrador"
                        },
                        new
                        {
                            RoleId = 3,
                            Name = "Empleado"
                        });
                });

            modelBuilder.Entity("HermanosK.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedAt = new DateTime(2024, 11, 25, 5, 20, 39, 370, DateTimeKind.Local).AddTicks(6410),
                            Email = "cliente@hermanosk.com",
                            FirstName = "Usuario",
                            IsActive = true,
                            LastName = "Cliente",
                            PasswordHash = "$2a$11$Gwh4zJjMZNBo46avO/gSVegStWe2DNrU3U8GYhw15yn2NvsdW/5Gu",
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            CreatedAt = new DateTime(2024, 11, 25, 5, 20, 39, 370, DateTimeKind.Local).AddTicks(6445),
                            Email = "admin@hermanosk.com",
                            FirstName = "Usuario",
                            IsActive = true,
                            LastName = "Administrador",
                            PasswordHash = "$2a$11$Gwh4zJjMZNBo46avO/gSVegStWe2DNrU3U8GYhw15yn2NvsdW/5Gu",
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            CreatedAt = new DateTime(2024, 11, 25, 5, 20, 39, 370, DateTimeKind.Local).AddTicks(6449),
                            Email = "empleado@hermanosk.com",
                            FirstName = "Usuario",
                            IsActive = true,
                            LastName = "Empleado",
                            PasswordHash = "$2a$11$Gwh4zJjMZNBo46avO/gSVegStWe2DNrU3U8GYhw15yn2NvsdW/5Gu",
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("HermanosK.Models.User", b =>
                {
                    b.HasOne("HermanosK.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("HermanosK.Models.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
